version: '3.8'
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      timeout: 10s
      interval: 1s
      retries: 10
  frontend:
    image: vasilekx/foodgram_frontend:latest
    # build:
    #   context: ../frontend
    #   dockerfile: Dockerfile
    volumes:
      # - ../frontend/:/app/result_build/
      - frontend_data:/app/result_build/
    depends_on:
      db:
        condition: service_healthy
  web:
    image: vasilekx/foodgram_backend:latest
    # build:
    #     context: ../backend
    #     dockerfile: ./Dockerfile
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - frontend
    env_file:
      - ./.env
  nginx:
    image: nginx:1.21.3-alpine
    # network_mode: "host"  # для работы с локальныим проектом
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      # - ../frontend/build:/usr/share/nginx/html/
      - frontend_data:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - ../docs/:/usr/share/nginx/html/api/docs/
    depends_on:
      - web

volumes:
  postgres_data:
  frontend_data:
  static_value:
  media_value:
